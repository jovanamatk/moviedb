[{"E:\\Programiranje\\Learning\\moviedb\\src\\index.tsx":"1","E:\\Programiranje\\Learning\\moviedb\\src\\App.tsx":"2","E:\\Programiranje\\Learning\\moviedb\\src\\reportWebVitals.ts":"3","E:\\Programiranje\\Learning\\moviedb\\src\\components\\Movies.tsx":"4","E:\\Programiranje\\Learning\\moviedb\\src\\components\\TvShows.tsx":"5","E:\\Programiranje\\Learning\\moviedb\\src\\components\\Navbar.tsx":"6","E:\\Programiranje\\Learning\\moviedb\\src\\components\\Search.tsx":"7","E:\\Programiranje\\Learning\\moviedb\\src\\components\\common\\Card.tsx":"8","E:\\Programiranje\\Learning\\moviedb\\src\\components\\common\\Item.tsx":"9"},{"size":618,"mtime":1606266077492,"results":"10","hashOfConfig":"11"},{"size":2461,"mtime":1606363001235,"results":"12","hashOfConfig":"11"},{"size":425,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":500,"mtime":1606358147099,"results":"14","hashOfConfig":"11"},{"size":505,"mtime":1606358143312,"results":"15","hashOfConfig":"11"},{"size":382,"mtime":1606268194471,"results":"16","hashOfConfig":"11"},{"size":515,"mtime":1606339211906,"results":"17","hashOfConfig":"11"},{"size":1201,"mtime":1606362728295,"results":"18","hashOfConfig":"11"},{"size":456,"mtime":1606362673278,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"s4afms",{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Programiranje\\Learning\\moviedb\\src\\index.tsx",[],["40","41"],"E:\\Programiranje\\Learning\\moviedb\\src\\App.tsx",["42","43"],"import React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { TvShows } from './components/TvShows';\nimport { Movies } from './components/Movies';\nimport { Navbar } from './components/Navbar';\nimport { Search } from './components/Search';\nimport Axios from 'axios';\nimport { Item } from './components/common/Item';\nimport { useHistory, useLocation } from 'react-router';\n\nexport const AppContext = React.createContext({ movies: [] as Movies[], tvShows: [] as TvShows[]});\n\ninterface Movies {\n  title:string\n}\n\ninterface TvShows {\n  name:string\n}\n\nfunction App() {\n  const [movies, setMovies] = useState<Movies[]>([]);\n  const [tvShows, setTvShows] = useState<TvShows[]>([]);\n  const [search, setSearch] = useState('');\n\nuseEffect(() => {\n  Axios.get('https://api.themoviedb.org/3/movie/popular?api_key=810f591d016b0a00f63dda22f0ca7d52').then(response => setMovies(response.data.results.slice(0,10) as Movies[]))\n  Axios.get('https://api.themoviedb.org/3/tv/popular?api_key=810f591d016b0a00f63dda22f0ca7d52').then(response => setTvShows(response.data.results.slice(0,10) as TvShows[]))\n}, []);\n\n  let handleSearch = query => {\n    setSearch(query);\n  }\n\n  let getData = (data:any, parameter:string) => {\n    let filtered;\n    if (search && data) {\n      filtered = data.filter(item => item[parameter].toLowerCase().startsWith(search.toLowerCase()))\n    }\n     \n    return filtered;\n  }\n\n  const history = useHistory();\n  const location = useLocation();\n\n  let hideHeader = () => {\n    if (location.pathname.startsWith('/movies/') || location.pathname.startsWith('/tv-shows/'))\n    return true;          \n  }\n\n  return (\n    <AppContext.Provider value={getData(movies, 'title') ? {movies:getData(movies, 'title'), tvShows:getData(tvShows, 'name')} : {movies: movies,tvShows:tvShows }}>\n\n    <div className=\"container\">\n      {\n      hideHeader() \n      ? \n      <button onClick={() => history.goBack()}><h2>Back</h2></button> \n      : \n      <><Navbar/> <Search value={search} onChange={handleSearch}/></> \n      }\n    <Switch>\n      <Route path=\"/movies/:id\" component={Item} />\n      <Route path=\"/movies\" component={Movies} />\n      <Route path=\"/tv-shows/:id\" component={Item} />\n      <Route path=\"/tv-shows\" component={TvShows} />\n      <Redirect from=\"/\" to=\"/tv-shows\"/>\n      <Redirect to=\"/\"/>\n    </Switch>\n    </div>\n    </AppContext.Provider>\n  );\n}\n\nexport default App;\n","E:\\Programiranje\\Learning\\moviedb\\src\\reportWebVitals.ts",[],"E:\\Programiranje\\Learning\\moviedb\\src\\components\\Movies.tsx",[],"E:\\Programiranje\\Learning\\moviedb\\src\\components\\TvShows.tsx",[],"E:\\Programiranje\\Learning\\moviedb\\src\\components\\Navbar.tsx",[],"E:\\Programiranje\\Learning\\moviedb\\src\\components\\Search.tsx",[],"E:\\Programiranje\\Learning\\moviedb\\src\\components\\common\\Card.tsx",["44","45"],"E:\\Programiranje\\Learning\\moviedb\\src\\components\\common\\Item.tsx",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":14,"column":11,"nodeType":"52","messageId":"53","endLine":14,"endColumn":17},{"ruleId":"50","severity":1,"message":"54","line":18,"column":11,"nodeType":"52","messageId":"53","endLine":18,"endColumn":18},{"ruleId":"55","severity":1,"message":"56","line":1,"column":17,"nodeType":"52","messageId":"57","endLine":1,"endColumn":27},{"ruleId":"55","severity":1,"message":"58","line":3,"column":10,"nodeType":"52","messageId":"57","endLine":3,"endColumn":20},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"@typescript-eslint/no-redeclare","'Movies' is already defined.","Identifier","redeclared","'TvShows' is already defined.","@typescript-eslint/no-unused-vars","'useContext' is defined but never used.","unusedVar","'AppContext' is defined but never used.","no-global-assign","no-unsafe-negation"]